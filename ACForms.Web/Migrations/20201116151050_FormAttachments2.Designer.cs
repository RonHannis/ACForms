// <auto-generated />
using System;
using ACForms.Web.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ACForms.Web.Migrations
{
    [DbContext(typeof(ACFormsDbContext))]
    [Migration("20201116151050_FormAttachments2")]
    partial class FormAttachments2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("acforms")
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ACForms.Web.DAL.Models.ACForm", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccessLevel")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<bool>("AllowAttachments")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormSchema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequireCAPTCHA")
                        .HasColumnType("bit");

                    b.HasKey("Key");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("ACForms.Web.DAL.Models.ACFormProcessor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConversionSpec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormKey")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProcessorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormKey");

                    b.ToTable("FormProcessors");
                });

            modelBuilder.Entity("ACForms.Web.DAL.Models.ACPreFillProcessor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConversionSpec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormKey")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProcessorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormKey");

                    b.ToTable("PreFillProcessors");
                });

            modelBuilder.Entity("ACForms.Web.DAL.Models.FormEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormKey")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FormKey");

                    b.ToTable("FormEntry");
                });

            modelBuilder.Entity("ACForms.Web.DAL.Models.FormEntryArchive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FormKey")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("EntryArchive");
                });

            modelBuilder.Entity("ACForms.Web.DAL.Models.FormEntryAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("EntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("ACForms.Web.DAL.Models.ACFormProcessor", b =>
                {
                    b.HasOne("ACForms.Web.DAL.Models.ACForm", "Form")
                        .WithMany("FormProcessors")
                        .HasForeignKey("FormKey");
                });

            modelBuilder.Entity("ACForms.Web.DAL.Models.ACPreFillProcessor", b =>
                {
                    b.HasOne("ACForms.Web.DAL.Models.ACForm", "Form")
                        .WithMany("PreFillProcessors")
                        .HasForeignKey("FormKey");
                });

            modelBuilder.Entity("ACForms.Web.DAL.Models.FormEntry", b =>
                {
                    b.HasOne("ACForms.Web.DAL.Models.ACForm", "Form")
                        .WithMany()
                        .HasForeignKey("FormKey");

                    b.OwnsOne("ACForms.Web.DAL.Models.PreFillLookupCriteria", "PrefillCriteria", b1 =>
                        {
                            b1.Property<Guid>("FormEntryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<long>("EligibilityId")
                                .HasColumnType("bigint");

                            b1.Property<string>("EnrollId")
                                .HasColumnType("nvarchar(15)")
                                .HasMaxLength(15);

                            b1.Property<string>("InsuredId")
                                .HasColumnType("nvarchar(15)")
                                .HasMaxLength(15);

                            b1.Property<string>("MemberId")
                                .HasColumnType("nvarchar(30)")
                                .HasMaxLength(30);

                            b1.Property<string>("Npi")
                                .HasColumnType("nvarchar(10)")
                                .HasMaxLength(10);

                            b1.Property<string>("ProviderId")
                                .HasColumnType("nvarchar(15)")
                                .HasMaxLength(15);

                            b1.Property<string>("QnxtId")
                                .HasColumnType("nvarchar(15)")
                                .HasMaxLength(15);

                            b1.HasKey("FormEntryId");

                            b1.ToTable("FormEntry");

                            b1.WithOwner()
                                .HasForeignKey("FormEntryId");
                        });
                });

            modelBuilder.Entity("ACForms.Web.DAL.Models.FormEntryArchive", b =>
                {
                    b.OwnsOne("ACForms.Web.DAL.Models.PreFillLookupCriteria", "PrefillCriteria", b1 =>
                        {
                            b1.Property<long>("FormEntryArchiveId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<long>("EligibilityId")
                                .HasColumnType("bigint");

                            b1.Property<string>("EnrollId")
                                .HasColumnType("nvarchar(15)")
                                .HasMaxLength(15);

                            b1.Property<string>("InsuredId")
                                .HasColumnType("nvarchar(15)")
                                .HasMaxLength(15);

                            b1.Property<string>("MemberId")
                                .HasColumnType("nvarchar(30)")
                                .HasMaxLength(30);

                            b1.Property<string>("Npi")
                                .HasColumnType("nvarchar(10)")
                                .HasMaxLength(10);

                            b1.Property<string>("ProviderId")
                                .HasColumnType("nvarchar(15)")
                                .HasMaxLength(15);

                            b1.Property<string>("QnxtId")
                                .HasColumnType("nvarchar(15)")
                                .HasMaxLength(15);

                            b1.HasKey("FormEntryArchiveId");

                            b1.ToTable("EntryArchive");

                            b1.WithOwner()
                                .HasForeignKey("FormEntryArchiveId");
                        });
                });

            modelBuilder.Entity("ACForms.Web.DAL.Models.FormEntryAttachment", b =>
                {
                    b.HasOne("ACForms.Web.DAL.Models.FormEntry", "FormEntry")
                        .WithMany("Attachments")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
